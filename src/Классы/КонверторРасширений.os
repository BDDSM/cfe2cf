#Использовать fs
#Использовать logos
#Использовать v8runner

Перем Лог Экспорт;

Перем ИсходныйПуть Экспорт;
Перем ИмяРасширения Экспорт;
Перем ИмяФайлаКонфигурации Экспорт;
Перем КаталогВременныхФайлов Экспорт;
Перем ИмяКаталогаПлатформы Экспорт;


Перем Конфигуратор;
Перем ИмяВременнойБазы;
Перем КаталогИсходныхФайлов;

Процедура ВыполнитьПреобразованиеИзФайлаРасширения() Экспорт

	Инициализировать();
		
	ПодготовитьИсходныеФайлыИзФайлаРасширения();
	
	ОтредактироватьИЗагрузитьИсходныеФайлы();

	ВыгрузитьФайлКонфигурации();

КонецПроцедуры

Процедура ВыполнитьПреобразованиеИзИсходныхФайловРасширения() Экспорт
	
	Инициализировать();

	СкопироватьИсходныеФайлы();

	ОтредактироватьИЗагрузитьИсходныеФайлы();

	ВыгрузитьФайлКонфигурации();

КонецПроцедуры

Процедура СкопироватьИсходныеФайлы()
	
	ФС.КопироватьСодержимоеКаталога(ИсходныйПуть, КаталогИсходныхФайлов);

КонецПроцедуры


Процедура Инициализировать()

	ФайлРасширения = Новый Файл(ИсходныйПуть);

	Если Не ФайлРасширения.Существует() Тогда
		ТекстОшибки = СтрШаблон("Файл не существует по пути %1", ИсходныйПуть);
		Лог.Ошибка(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(КаталогВременныхФайлов) Тогда
		КаталогВременныхФайлов = ПолучитьИмяВременногоФайла("tmp");		
		ФС.ОбеспечитьКаталог(КаталогВременныхФайлов);		 
		Лог.Информация(СтрШаблон("Подготовлен каталог %1", КаталогВременныхФайлов))
	КонецЕсли;

	ФС.ОбеспечитьКаталог(КаталогВременныхФайлов);		 

	Если Не ФС.КаталогПустой(КаталогВременныхФайлов) Тогда
		ТекстОшибки = СтрШаблон("Каталог временных файлов должен быть пуст: %1", КаталогВременныхФайлов);
		Лог.Ошибка(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	ИмяВременнойБазы = ОбъединитьПути(КаталогВременныхФайлов, "database");
	ФС.ОбеспечитьКаталог(ИмяВременнойБазы);		 

	КаталогИсходныхФайлов = ОбъединитьПути(КаталогВременныхФайлов, "src");
	ФС.ОбеспечитьКаталог(КаталогИсходныхФайлов);		 

	Если ЗначениеЗаполнено(ИмяКаталогаПлатформы) Тогда
		Конфигуратор.ПутьКПлатформе1С(ОбъединитьПути(ИмяКаталогаПлатформы,"1cv8"));	
	КонецЕсли;

	Лог.Информация(СтрШаблон("Создаю временную базу %1", ИмяВременнойБазы));
	Конфигуратор.СоздатьФайловуюБазу(ИмяВременнойБазы);

КонецПроцедуры

Процедура ПодготовитьИсходныеФайлыИзФайлаРасширения()

	Конфигуратор.УстановитьКонтекст("/F" + ИмяВременнойБазы, "", "");
	
	Лог.Информация(СтрШаблон("Загружаю расширение"));
	
	ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
	ПараметрыЗапуска.Добавить(СтрШаблон("/LoadCfg""%1"" -Extension %2", ИсходныйПуть, ИмяРасширения)); 
	Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);
	
	Лог.Информация(СтрШаблон("Выгружаю расширение в исходные файлы %1", КаталогИсходныхФайлов));
		
	ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
	ПараметрыЗапуска.Добавить(СтрШаблон("/DumpConfigToFiles""%1"" -Extension %2", КаталогИсходныхФайлов, ИмяРасширения)); 
	Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);

КонецПроцедуры

Процедура ОтредактироватьИЗагрузитьИсходныеФайлы()
	
	Конфигуратор.УстановитьКонтекст("/F" + ИмяВременнойБазы, "", "");

	Лог.Информация(СтрШаблон("Редактирую файлы"));

	ОбработкаФайлов.ВыполнитьОбработкуИсходныхФайловРасширения(КаталогИсходныхФайлов);

	Лог.Информация(СтрШаблон("Загружаю исходные файлы в базу"));

	ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
	ПараметрыЗапуска.Добавить(СтрШаблон("/LoadConfigFromFiles ""%1""", КаталогИсходныхФайлов)); 

	Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);

КонецПроцедуры

Процедура ВыгрузитьФайлКонфигурации()
		
	Конфигуратор.УстановитьКонтекст("/F" + ИмяВременнойБазы, "", "");

	Лог.Информация(СтрШаблон("Сохраняю конфигурацию %1", ИмяФайлаКонфигурации));
	
	ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
	ПараметрыЗапуска.Добавить(СтрШаблон("/DumpCfg ""%1"" ", ИмяФайлаКонфигурации)); 

	Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);

КонецПроцедуры

Конфигуратор = Новый УправлениеКонфигуратором();
Лог = Логирование.ПолучитьЛог("oscript.lib.cfe2cf.test");